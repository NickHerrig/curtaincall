name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Checkout and Test code
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go

    - name: Checkout code
      uses: actions/checkout@v2

#    - name: Test code
#      run: go test ./...

    - name: build go code
      run: go build -o curtaincall ./cmd/api/prod

    - name: Deploy api binary and db setup script
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.CC_HOSTNAME }}
        username: ${{ secrets.CC_SSH_USER }}
        key: ${{ secrets.CC_SSH_KEY }}
        source: curtaincall,setup.sql
        target: /home/${{ secrets.CC_SSH_USER }}/

    - name: build frontend
      run: cd frontend/ && yarn install && yarn build

    - name: deploy frontend files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.CC_HOSTNAME }}
        username: ${{ secrets.CC_SSH_USER }}
        key: ${{ secrets.CC_SSH_KEY }}
        source: frontend/dist/*
        target: /home/${{ secrets.CC_SSH_USER }}/

    #TODO: temporary remove db...
    - name: remove db
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.CC_HOSTNAME }}
        username: ${{ secrets.CC_SSH_USER }}
        key: ${{ secrets.CC_SSH_KEY }}
        script: rm curtaincall.db

    - name: initalize db
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.CC_HOSTNAME }}
        username: ${{ secrets.CC_SSH_USER }}
        key: ${{ secrets.CC_SSH_KEY }}
        script: sqlite3 curtaincall.db < setup.sql
        #TODO: make this script idempotent

    - name: restart application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.CC_HOSTNAME }}
        username: ${{ secrets.CC_SSH_USER }}
        key: ${{ secrets.CC_SSH_KEY }}
        script: sudo systemctl restart curtaincall
